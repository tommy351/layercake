// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/spf13/cobra"
	"github.com/tommy351/layercake/pkg/build"
	"github.com/tommy351/layercake/pkg/config"
	"github.com/tommy351/layercake/pkg/docker"
	"github.com/tommy351/layercake/pkg/log"
)

// Injectors from wire.go:

func InitializeBuilder(cmd *cobra.Command, args []string) (*build.Builder, func(), error) {
	configConfig, err := config.LoadConfig(cmd)
	if err != nil {
		return nil, nil, err
	}
	client, err := docker.NewClient()
	if err != nil {
		return nil, nil, err
	}
	encoderConfig := log.NewEncoderConfig()
	atomicLevel, err := log.NewLevel(configConfig)
	if err != nil {
		return nil, nil, err
	}
	zapConfig := log.NewLoggerConfig(encoderConfig, atomicLevel)
	logger, cleanup, err := log.NewLogger(zapConfig)
	if err != nil {
		return nil, nil, err
	}
	excludedPatterns, err := build.LoadIgnoreFile(configConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	builder, err := build.NewBuilder(configConfig, client, logger, excludedPatterns, args)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return builder, func() {
		cleanup()
	}, nil
}
